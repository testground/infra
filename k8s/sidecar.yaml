apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: testground-sidecar
spec:
  selector:
    matchLabels:
      name: testground-sidecar
  template:
    metadata:
      labels:
        name: testground-sidecar
    spec:
      terminationGracePeriodSeconds: 10
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      - name: iproute-add
        image: busybox
        securityContext:
          privileged: true
        command:
        - sh
        - -ac
        - >
          while [ "$GW" = "" ]; do export GW=$(ip route | grep cni0 | awk '{print $7}'); echo "Got GW: $GW"; sleep 5; done;
          echo $GW &&
          ip route &&
          ip route add 100.64.0.0/16 via $GW &&
          ip route || true;
          nslookup testground-infra-redis-headless;
          while [ $? -ne 0 ]; do echo "redis-headless doesn't resolve."; sleep 5; nslookup testground-infra-redis-headless; done;
          echo "redis-headless resolved."
      containers:
      - name: testground-sidecar
        image: iptestground/sidecar:edge
        imagePullPolicy: Always
        command: ["testground"]
        args: ["sidecar", "--runner", "k8s", "--pprof"]
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "SYS_ADMIN", "SYS_TIME"]
          privileged: true
        env:
        - name: REDIS_HOST
          value: "testground-infra-redis-headless"
        - name: INFLUXDB_HOST
          value: "influxdb"
        ports:
        - name: pprof
          containerPort: 6060
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
          - name: dockersock
            mountPath: "/var/run/docker.sock"
          - name: cnibin
            mountPath: "/host/opt/cni/bin"
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: cnibin
        hostPath:
          path: /opt/cni/bin
      nodeSelector:
        testground.nodetype: plan
